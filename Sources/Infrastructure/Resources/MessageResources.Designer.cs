//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Identity.Infrastructure.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MessageResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MessageResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Identity.Infrastructure.Resources.MessageResources", typeof(MessageResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t assign inexistant role to the user: &apos;{0}&apos;..
        /// </summary>
        public static string AssignInexistantRoleToUser {
            get {
                return ResourceManager.GetString("AssignInexistantRoleToUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t delete an administrator user, please contact the support team to do that..
        /// </summary>
        public static string DeleteAdministrator {
            get {
                return ResourceManager.GetString("DeleteAdministrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t get users of an inexistant role : &apos;{0}&apos;..
        /// </summary>
        public static string GetUsersInsideInexistantRole {
            get {
                return ResourceManager.GetString("GetUsersInsideInexistantRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t reinitialize the password of an administrator user, please contact the support team to do that..
        /// </summary>
        public static string ReinitializeAdminPassword {
            get {
                return ResourceManager.GetString("ReinitializeAdminPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove the user: &apos;{0}&apos; from an inexistant role: &apos;{1}&apos;.
        /// </summary>
        public static string RemoveUserFromInexistantRole {
            get {
                return ResourceManager.GetString("RemoveUserFromInexistantRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t unassign user from administrator role, please contact the support team to do that..
        /// </summary>
        public static string UnassignAdminRole {
            get {
                return ResourceManager.GetString("UnassignAdminRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not an integer..
        /// </summary>
        public static string ValueNotInteger {
            get {
                return ResourceManager.GetString("ValueNotInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t verify that the user: &apos;{0}&apos; belongs to an inexistant role: &apos;{1}&apos;..
        /// </summary>
        public static string VerifyUserBelongsToInexistantRole {
            get {
                return ResourceManager.GetString("VerifyUserBelongsToInexistantRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your credentials are wrong..
        /// </summary>
        public static string WrongCredentials {
            get {
                return ResourceManager.GetString("WrongCredentials", resourceCulture);
            }
        }
    }
}
